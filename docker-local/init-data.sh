#!/bin/bash
set -e

# Create the non-root user if it doesn't exist
if psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" -tAc "SELECT 1 FROM pg_roles WHERE rolname='$POSTGRES_NON_ROOT_USER'" | grep -q 1; then
    echo "User '$POSTGRES_NON_ROOT_USER' already exists"
else
    echo "Creating user '$POSTGRES_NON_ROOT_USER'"
    psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
        CREATE USER "$POSTGRES_NON_ROOT_USER" WITH PASSWORD '$POSTGRES_NON_ROOT_PASSWORD';
        ALTER USER "$POSTGRES_NON_ROOT_USER" CREATEDB;
EOSQL
fi

# Grant privileges to the non-root user on the database
psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
    GRANT ALL PRIVILEGES ON DATABASE "$POSTGRES_DB" TO "$POSTGRES_NON_ROOT_USER";
    GRANT ALL PRIVILEGES ON SCHEMA public TO "$POSTGRES_NON_ROOT_USER";
    ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON TABLES TO "$POSTGRES_NON_ROOT_USER";
    ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON SEQUENCES TO "$POSTGRES_NON_ROOT_USER";
    ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON FUNCTIONS TO "$POSTGRES_NON_ROOT_USER";
EOSQL

echo "PostgreSQL initialized successfully" 